generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
}

model Session {
  id            String   @id @db.VarChar(255)
  shop          String   @db.VarChar(255)
  state         String   @db.VarChar(255)
  isOnline      Boolean  @default(false)
  scope         String?  @db.Text
  expires       DateTime?
  accessToken   String   @db.Text
  userId        BigInt?
  firstName     String?  @db.VarChar(191)
  lastName      String?  @db.VarChar(191)
  email         String?  @db.VarChar(320)
  accountOwner  Boolean  @default(false)
  locale        String?  @db.VarChar(20)
  collaborator  Boolean? @default(false)
  emailVerified Boolean? @default(false)

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("Session")
}

model Shop {
  id             Int       @id @default(autoincrement())
  shop           String    @unique
  accessToken    String?
  installed      Boolean   @default(false)
  uninstalledAt  DateTime?
  onboardedAt   DateTime? 
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}


model NotificationConfig {
  id                    Int       @id @default(autoincrement())
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  shop                  String
  key                   String

  enabled               Boolean   @default(false)
  showType              String?

  // multi arrays as JSON strings
  messageTitlesJson     String?   @db.LongText
  locationsJson         String?   @db.LongText
  namesJson             String?   @db.LongText
  selectedProductsJson  String?   @db.LongText

  messageText           String?
  fontFamily            String?
  position              String?
  animation             String?
  mobileSize            String?
  mobilePositionJson    String?

  titleColor            String?
  bgColor               String?
  msgColor              String?
  ctaBgColor            String?

  rounded               Int?
  durationSeconds       Int?
  alternateSeconds      Int?
  fontWeight            Int?

  // icon support
  iconKey               String?
  iconSvg               String?   @db.LongText

  @@index([shop, key])
}


